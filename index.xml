<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kasper</title>
    <link>https://kasperliu.github.io/</link>
    <description>Recent content on Kasper</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 11 Jan 2019 16:14:43 +0800</lastBuildDate>
    
	<atom:link href="https://kasperliu.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nothing at Stake Problem of PoS</title>
      <link>https://kasperliu.github.io/post/nothing-at-stake-problem-of-pos/</link>
      <pubDate>Fri, 11 Jan 2019 16:14:43 +0800</pubDate>
      
      <guid>https://kasperliu.github.io/post/nothing-at-stake-problem-of-pos/</guid>
      <description>Another address for Chinese version:
https://clouddatalab.github.io/blog/2019/01/11/Nothing-at-stake-problem-of-PoS/
Introduction Proof of Stake is a novel consensus algorithm that validates blocks mainly according to a validator’s economic stake in the network rather than the hash power. Regarded as the next generation mainstream consensus mechanism of blockchain technology, it has significant advantages including energy saving, reduced risk of centralization and security.
However, in the early discussion of PoS protocol, it is seem to be more vulnerable due to the fact that it is not aware of anything in reality.</description>
    </item>
    
    <item>
      <title>Long Range Attack on PoS</title>
      <link>https://kasperliu.github.io/post/long-range-attack-on-pos/</link>
      <pubDate>Sun, 30 Dec 2018 16:21:08 +0800</pubDate>
      
      <guid>https://kasperliu.github.io/post/long-range-attack-on-pos/</guid>
      <description>Another address for Chinese version:
https://clouddatalab.github.io/blog/2019/01/10/Long-Range-Attack-On-PoS/
Introduction Long Range Attack is an attack behavior that attacker make a conflict point on a historic block in order to construct a private chain and overtake the legal main chain.
This attack is seem to be only appeared in Proof of Stake-based blockchain theoretically due to the weak subjectivity and costless simulation of such consensus algorithm.
Steps to launching The actual steps to lauch Long Range Attack is as follow:</description>
    </item>
    
    <item>
      <title>Three-Tier Architecture of P2P Network in Ethereum</title>
      <link>https://kasperliu.github.io/post/three-tier-architecture-of-p2p-network-in-ethereum/</link>
      <pubDate>Sat, 08 Dec 2018 15:54:46 +0800</pubDate>
      
      <guid>https://kasperliu.github.io/post/three-tier-architecture-of-p2p-network-in-ethereum/</guid>
      <description>Another address for Chinese version:
https://clouddatalab.github.io/blog/2019/01/09/Three-tier-architecture-of-P2P-network-in-Ethereum/
Introduction As a decentralized digital currency system, the network architecture of Ethereum is very important since the synchronization of data and the update of nodes’ status both depend on the connection mechanism between nodes. Peer to Peer(P2P) protocol is used as a communication link for Ethereum and has been developed in various aspects according to the transmission of data(e.g. blocks, transaction and hash value) and message in the network, which can be divided into three layers.</description>
    </item>
    
    <item>
      <title>Tail Recursion</title>
      <link>https://kasperliu.github.io/post/tail-recursion/</link>
      <pubDate>Tue, 04 Dec 2018 11:16:03 +0800</pubDate>
      
      <guid>https://kasperliu.github.io/post/tail-recursion/</guid>
      <description>What is tail recursion A recursion function is that a function calls itself directly or indirectly. We ususally use recursion to address some problems like:
 the solution can be implemented by recursion(e.g. backtracking). the definition of data is fit to compute with recursion(e.g. Fibonacci). the data structure can be organized or accessed by recursion(e.g. the traversal of binary tree).  Tail recursion is a concrete implement of recursion that just call the function itself in the end of codes.</description>
    </item>
    
    <item>
      <title>Attacks on PoS</title>
      <link>https://kasperliu.github.io/post/attacks-on-pos/</link>
      <pubDate>Sat, 24 Nov 2018 15:36:43 +0800</pubDate>
      
      <guid>https://kasperliu.github.io/post/attacks-on-pos/</guid>
      <description>another address with Chinese version:
https://clouddatalab.github.io/share/2018/12/05/Attacks/
What is Proof of Stake Proof of Stake (PoS) is a consensus algorithms for public blockchains that depend on a validator&amp;rsquo;s economic stake in the network and it is an alternative consensus mechanism to blockchain systems. Instead of consuming largely computational resource in PoW, PoS just need a little computational power to resolve a simple puzzel. Therefore, the majority of problems with PoS protocols arise from the fact that there is nothing physical &amp;ldquo;anchoring&amp;rdquo; in real-world.</description>
    </item>
    
    <item>
      <title>Paper Reading Notes</title>
      <link>https://kasperliu.github.io/post/paper_reading_note/</link>
      <pubDate>Thu, 04 Oct 2018 10:44:27 +0800</pubDate>
      
      <guid>https://kasperliu.github.io/post/paper_reading_note/</guid>
      <description> Papers List List the papers have been read to track the study roadmap.
Blockchain Security and Privacy Hawk：The Blockchain Model of Cryptography and Privacy-Preseving Smart Contracts On the Security and Performance of Proof of Work Blockchains A Better Method to Analyze Blockchain Consistency  Attacks Low-Resource Eclipse Attacks on Ethereum&amp;rsquo;s Peer-to-Peer Network  Improvement Redactable Blockchain or Rewriting History in Bitcoin and Friends  </description>
    </item>
    
    <item>
      <title>Running Jupyter Notebook Server Remotely</title>
      <link>https://kasperliu.github.io/post/running-jupyter-notebook-server/</link>
      <pubDate>Sat, 15 Sep 2018 16:14:37 +0800</pubDate>
      
      <guid>https://kasperliu.github.io/post/running-jupyter-notebook-server/</guid>
      <description>Installation For convenience, recommending the Anaconda(https://www.anaconda.com/download/) to install Python and Jupyter. While anaconda has been installed, just run jupyter notebook at terminal to check it working successfully.
Configuration conda channel configuration The conda configuration file, .condarc, is an optional runtime configuration file that allows advanced users to configure various aspects of conda, such as which channels it searches for packages, proxy settings and environment directories.
The .condarc file is not included by default, but it is automatically created in your home directory the first time you run the conda config command.</description>
    </item>
    
    <item>
      <title>Hugo Hosted on Github</title>
      <link>https://kasperliu.github.io/post/hugo-hosted-on-github/</link>
      <pubDate>Fri, 14 Sep 2018 16:38:52 +0800</pubDate>
      
      <guid>https://kasperliu.github.io/post/hugo-hosted-on-github/</guid>
      <description>Prepare before deploying Hugo as a personal home page hosted on Github, there are some basic steps to complete:
 a Git version greater than v2.8.
 a Github Pages, e.g. &amp;lt;Username&amp;gt;.github.io. install Hugo .  Deploying step by step to deploy:
 create a new repository e.g. blog to maintain Hugo&amp;rsquo;s content (personal blogs) and other source files. git clone &amp;lt;new repository&amp;gt; to your workspace and go into the path e.</description>
    </item>
    
  </channel>
</rss>